{
  "stats": {
    "suites": 1,
    "tests": 15,
    "passes": 14,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-02T00:02:27.506Z",
    "end": "2022-09-02T00:02:44.781Z",
    "duration": 17275,
    "testsRegistered": 15,
    "passPercent": 93.33333333333333,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5292b357-1712-45f9-ad66-cf77160f0b3d",
      "title": "",
      "fullFile": "cypress/integration/todos.feature",
      "file": "cypress/integration/todos.feature",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
          "title": "End to end todos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Creating a  single to-do task",
              "fullTitle": "End to end todos Creating a  single to-do task",
              "timedOut": null,
              "duration": 630,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "2a30c4d2-4b3f-4be8-a7c8-6456ee6508a7",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creating multiple to-do tasks",
              "fullTitle": "End to end todos Creating multiple to-do tasks",
              "timedOut": null,
              "duration": 997,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "03f772e9-dca9-4945-9752-5f10a3e1794a",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creating duplicate to-do tasks",
              "fullTitle": "End to end todos Creating duplicate to-do tasks",
              "timedOut": null,
              "duration": 739,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {
                "message": "AssertionError: expected [ 'same task', 'same task' ] to not include 'same task'",
                "estack": "AssertionError: expected [ 'same task', 'same task' ] to not include 'same task'\n    at Context.eval (https://todomvc.com/__cypress/tests?p=cypress/integration/todos.feature:82:32)",
                "diff": null
              },
              "uuid": "83acc8b7-bf50-49ab-94a7-652c4343d628",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creating  task in foreign language",
              "fullTitle": "End to end todos Creating  task in foreign language",
              "timedOut": null,
              "duration": 748,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8b62b7ea-77f7-408b-8ef3-74b09b9c0d29",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creating an empty task",
              "fullTitle": "End to end todos Creating an empty task",
              "timedOut": null,
              "duration": 321,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "424417e4-d3ff-496d-981f-9afa80fab177",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Creating a lengthy task",
              "fullTitle": "End to end todos Creating a lengthy task",
              "timedOut": null,
              "duration": 5863,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "de935e3a-a61f-4520-887a-efa8a89b449e",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit a task",
              "fullTitle": "End to end todos Edit a task",
              "timedOut": null,
              "duration": 522,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "9d33da41-ff95-44cd-a8ce-531b765bc751",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit a task and delete the task name",
              "fullTitle": "End to end todos Edit a task and delete the task name",
              "timedOut": null,
              "duration": 515,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "afef4845-37dc-48e5-8285-6b5b28c89f98",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Edit a completed task",
              "fullTitle": "End to end todos Edit a completed task",
              "timedOut": null,
              "duration": 593,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "0105fab2-a1d6-4e2b-82e4-48c98610de61",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Complete a task",
              "fullTitle": "End to end todos Complete a task",
              "timedOut": null,
              "duration": 592,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "63f13417-24f7-431c-9e3d-baefee430a16",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Complete a list of tasks",
              "fullTitle": "End to end todos Complete a list of tasks",
              "timedOut": null,
              "duration": 1177,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "b71e0134-1bd8-4c12-be8f-a86b072f6452",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete a particular task",
              "fullTitle": "End to end todos Delete a particular task",
              "timedOut": null,
              "duration": 769,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "798a6c43-9534-40ec-af77-57549cb6b6d8",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Delete a completed task",
              "fullTitle": "End to end todos Delete a completed task",
              "timedOut": null,
              "duration": 917,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "516185d3-ce8c-4712-8c16-fe25ebbd1d3e",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the Clear completed link",
              "fullTitle": "End to end todos Verify the Clear completed link",
              "timedOut": null,
              "duration": 873,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "48626abe-5399-4cba-b64d-0b1d529bdd92",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Verify the items left count",
              "fullTitle": "End to end todos Verify the items left count",
              "timedOut": null,
              "duration": 710,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const state = window.testState;\nreturn cy\n  .then(() => state.onStartScenario(scenario, indexedSteps))\n  .then(() =>\n    resolveAndRunBeforeHooks.call(this, scenario.tags, state.feature.name)\n  )\n  .then(() =>\n    indexedSteps.forEach((step) =>\n      stepTest.call(this, state, step, rowData)\n    )\n  )\n  .then(() => state.onFinishScenario(scenario));",
              "err": {},
              "uuid": "8bb2e275-2e2b-4096-8932-b77ba436ef10",
              "parentUUID": "c0b6b211-d99c-4207-993f-a5694e0a42cd",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "2a30c4d2-4b3f-4be8-a7c8-6456ee6508a7",
            "03f772e9-dca9-4945-9752-5f10a3e1794a",
            "8b62b7ea-77f7-408b-8ef3-74b09b9c0d29",
            "424417e4-d3ff-496d-981f-9afa80fab177",
            "de935e3a-a61f-4520-887a-efa8a89b449e",
            "9d33da41-ff95-44cd-a8ce-531b765bc751",
            "afef4845-37dc-48e5-8285-6b5b28c89f98",
            "0105fab2-a1d6-4e2b-82e4-48c98610de61",
            "63f13417-24f7-431c-9e3d-baefee430a16",
            "b71e0134-1bd8-4c12-be8f-a86b072f6452",
            "798a6c43-9534-40ec-af77-57549cb6b6d8",
            "516185d3-ce8c-4712-8c16-fe25ebbd1d3e",
            "48626abe-5399-4cba-b64d-0b1d529bdd92",
            "8bb2e275-2e2b-4096-8932-b77ba436ef10"
          ],
          "failures": [
            "83acc8b7-bf50-49ab-94a7-652c4343d628"
          ],
          "pending": [],
          "skipped": [],
          "duration": 15966,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}